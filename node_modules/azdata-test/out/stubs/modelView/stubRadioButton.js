"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the Source EULA. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StubRadioButton = void 0;
var vscode = require("vscode");
var stubComponent_1 = require("./stubComponent");
var StubRadioButton = /** @class */ (function (_super) {
    __extends(StubRadioButton, _super);
    function StubRadioButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Radio Button implementation
        _this.id = 'radio-button';
        _this._onDidClickEmitter = new vscode.EventEmitter();
        _this._onDidChangeCheckedStateEmitter = new vscode.EventEmitter();
        _this.onDidClick = _this._onDidClickEmitter.event;
        _this.onDidChangeCheckedState = _this._onDidChangeCheckedStateEmitter.event;
        return _this;
    }
    // Helper functions
    StubRadioButton.prototype.click = function () {
        this.checked = true;
        this._onDidClickEmitter.fire(this);
    };
    return StubRadioButton;
}(stubComponent_1.StubComponent));
exports.StubRadioButton = StubRadioButton;
