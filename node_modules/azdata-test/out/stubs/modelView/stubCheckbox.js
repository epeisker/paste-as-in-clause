"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the Source EULA. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StubCheckbox = exports.StubInputBox = void 0;
var vscode = require("vscode");
var stubComponent_1 = require("./stubComponent");
var StubInputBox = /** @class */ (function (_super) {
    __extends(StubInputBox, _super);
    function StubInputBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = 'input-box';
        _this.onTextChanged = undefined;
        _this.onEnterKeyPressed = undefined;
        return _this;
    }
    return StubInputBox;
}(stubComponent_1.StubComponent));
exports.StubInputBox = StubInputBox;
var StubCheckbox = /** @class */ (function () {
    function StubCheckbox() {
        this._onChanged = new vscode.EventEmitter();
        this._checked = false;
        this.id = 'stub-checkbox';
        this.enabled = false;
        this.onChanged = this._onChanged.event;
        this.onValidityChanged = undefined;
        this.valid = true;
    }
    Object.defineProperty(StubCheckbox.prototype, "checked", {
        get: function () {
            return this._checked;
        },
        set: function (value) {
            this._checked = value;
            this._onChanged.fire();
        },
        enumerable: false,
        configurable: true
    });
    StubCheckbox.prototype.updateProperties = function (properties) { throw new Error('Not implemented'); };
    StubCheckbox.prototype.updateProperty = function (key, value) { throw new Error('Not implemented'); };
    StubCheckbox.prototype.updateCssStyles = function (cssStyles) { throw new Error('Not implemented'); };
    StubCheckbox.prototype.validate = function () { throw new Error('Not implemented'); };
    StubCheckbox.prototype.focus = function () { return Promise.resolve(); };
    return StubCheckbox;
}());
exports.StubCheckbox = StubCheckbox;
