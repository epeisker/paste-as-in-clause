"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the Source EULA. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StubContainer = void 0;
var stubComponent_1 = require("./stubComponent");
var StubContainer = /** @class */ (function (_super) {
    __extends(StubContainer, _super);
    function StubContainer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.items = [];
        return _this;
    }
    StubContainer.prototype.clearItems = function () {
        this.items.length = 0;
    };
    StubContainer.prototype.addItems = function (itemConfigs, itemLayout) {
        var _a;
        (_a = this.items).push.apply(_a, itemConfigs);
    };
    StubContainer.prototype.addItem = function (component, itemLayout) {
        this.items.push(component);
    };
    StubContainer.prototype.insertItem = function (component, index, itemLayout) {
        throw new Error('Method not implemented.');
    };
    StubContainer.prototype.removeItem = function (component) {
        throw new Error('Method not implemented.');
    };
    StubContainer.prototype.setLayout = function (layout) {
        throw new Error('Method not implemented.');
    };
    return StubContainer;
}(stubComponent_1.StubComponent));
exports.StubContainer = StubContainer;
