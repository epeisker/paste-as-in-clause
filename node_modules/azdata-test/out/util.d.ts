/// <reference types="node" />
import * as https from 'https';
import { DownloadPlatform } from './download';
export declare let systemDefaultPlatform: any;
export declare function getAzureDataStudioDownloadUrl(version: string, platform?: DownloadPlatform): string;
export declare function urlToOptions(url: string): https.RequestOptions;
export declare function downloadDirToExecutablePath(dir: string): string;
export declare function insidersDownloadDirToExecutablePath(dir: string): string;
export declare function insidersDownloadDirMetadata(dir: string): {
    version: any;
    date: any;
};
export declare function getLatestInsidersMetadata(platform: string): Promise<any>;
/**
 * Resolve the Azure Data Studio cli path from executable path returned from `downloadAndUnzipAzureDataStudio`.
 * You can use this path to spawn processes for extension management. For example:
 *
 * ```ts
 * const cp = require('child_process');
 * const { downloadAndUnzipAzureDataStudio, resolveCliPathFromExecutablePath } = require('azdata-test')
 * const azureDataStudioExecutablePath = await downloadAndUnzipAzureDataStudio('1.36.0');
 * const cliPath = resolveCliPathFromExecutablePath(azureDataStudioExecutablePath);
 *
 * cp.spawnSync(cliPath, ['--install-extension', '<EXTENSION-ID-OR-PATH-TO-VSIX>'], {
 *   encoding: 'utf-8',
 *   stdio: 'inherit'
 * });
 * ```
 *
 * @param azureDataStudioExecutablePath The `azureDataStudioExecutablePath` from `downloadAndUnzipAzureDataStudio`.
 */
export declare function resolveCliPathFromAzureDataStudioExecutablePath(azureDataStudioExecutablePath: string): string;
